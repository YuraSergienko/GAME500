#define DATA0 GPIO_Pin_3    // PA3
#define DATA1 GPIO_Pin_5    // PA5
#define DATA2 GPIO_Pin_4    // PA4
#define DATA3 GPIO_Pin_6    // PA6
#define DATA4 GPIO_Pin_7    // PA7
#define DATA5 GPIO_Pin_8    // PA8
#define DATA6 GPIO_Pin_11   // PA11
#define DATA7 GPIO_Pin_12   // PA12
#define ADDR0 GPIO_Pin_9    // PB9
#define ADDR1 GPIO_Pin_8    // PB8
#define ADDR2 GPIO_Pin_7    // PB7
#define ADDR3 GPIO_Pin_6    // PB6
#define ADDR4 GPIO_Pin_5    // PB5
#define ADDR5 GPIO_Pin_4    // PB4
#define ADDR6 GPIO_Pin_10   // PB10
#define ADDR7 GPIO_Pin_11   // PB11
#define ADDR12 GPIO_Pin_0   // BP0
#define LED_R GPIO_Pin_13
#define LED_G GPIO_Pin_1
#define LED_B GPIO_Pin_2
#define SPI_CLK GPIO_Pin_13
#define SPI_DI GPIO_Pin_15
#define SPI_DO GPIO_Pin_14
#define SPI_CS GPIO_Pin_12
#define AUDIO GPIO_Pin_1
#define PLAY GPIO_Pin_0

#define NW 170 // Tape speed. More - lower speed, less - higher speed

// function declarations ------------------------------------------------------------------
void gpio_init(void);
void flash_init1(void);
void my_rcc_init(void);
void play_loader(void);
uint8_t read_flash(uint16_t f_addr, uint16_t b_addr);
void write_PU2(uint8_t PU_data);

// variable declarations ------------------------------------------------------------------
uint8_t     ADDR12_line=0;
uint8_t     PU_addr = 0;
uint16_t    PU_addr_in = 0;
uint8_t     PU_data = 0;
uint16_t    PU_data_out = 0;
uint8_t     file_addrH = 0;
uint8_t     file_addrL = 0;
uint16_t    file_addr = 0;
uint16_t    file_len = 0;
uint8_t     file_byte = 0;
uint16_t    byte_addr = 0;
uint8_t     MODE1_FLAG = 0;
uint8_t     MODE2_FLAG = 0;
//uint8_t     temp_byte = 0;

// loader1 CASSETE ---------------------------------------------------------------------------
static const uint8_t loader1[2000] = {
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // pilottone
        0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55, // pilottone
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // pilottone
        0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55, // pilottone
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // pilottone
        0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55, // pilottone
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // pilottone
        0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55, // pilottone
//200
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,  // block marker
//216
        0x55,0x55,0x55,0x55,0xe6, // subblock0 marker
        0x00,0x00,0x00,0x00,
        0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20, //name
        0x00,0x00,
        0x01,0x01,0x01,0x23, // MSB address, number of block, current number, CRC0
//254
        0x00,0x00,0x00,0x0,0xe6, // subblock1 marker
        0x80,0x23, // number of subblock1, CRC0
        0xF3,0x3E,0x82,0xD3,0x04,0x01,0x80,0x00,0x11,0x1A,0x01,0x21,0x00,0x80,0x1A,0x77, // data
        0x13,0x23,0x05,0xC2,0x0E,0x01,0xC3,0x00,0x80,0x00,0x21,0x00,0x00,0x7D,0xD3,0x07, // data
        0xd3, // CRC1
//294
        0x00,0x00,0x00,0x0,0xe6, // subblock2 marker
        0x81,0x23, // number of subblock2, CRC0
        0x7C,0xD3,0x05,0xDB,0x06,0x77,0x23,0x7C,0xFE,0x80,0xC2,0x03,0x80,0xC3,0x00,0x00, // data
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // data
        0x75, // CRC2
//334
        0x00,0x00,0x00,0x0,0xe6, // subblock3 marker
        0x82,0x23, // number of subblock3, CRC0
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // data
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // data
        0xa5, // CRC3
//374
        0x00,0x00,0x00,0x0,0xe6, // subblock4 marker
        0x83,0x23, // number of subblock4, CRC0
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // data
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // data
        0xa6, // CRC4
//414
        0x00,0x00,0x00,0x0,0xe6, // subblock5 marker
        0x84,0x23, // number of subblock5, CRC0
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // data
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // data
        0xa7, // CRC5
//454
        0x00,0x00,0x00,0x0,0xe6, // subblock6 marker
        0x85,0x23, // number of subblock6, CRC0
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // data
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // data
        0xa8, // CRC6
//494
        0x00,0x00,0x00,0x0,0xe6, // subblock7 marker
        0x86,0x23, // number of subblock7, CRC0
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // data
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // data
        0xa9, // CRC7
//534
        0x00,0x00,0x00,0x0,0xe6, // subblock8 marker
        0x87,0x23, // number of subblock8, CRC0
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // data
        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, // data
        0xaa // CRC8
//574
};

// loader2 ROM ---------------------------------------------------------------------------
static const uint8_t ROM_menu[256] = {
        0xF3, 0x0E, 0xFF, 0x11, 0x15, 0x00, 0x21, 0x00, 0xE0, 0x1A, 0x77, 0x13, 0x23, 0x0D, 0xC2, 0x09,
        0x00, 0xC3, 0x00, 0xE0, 0x00, 0x31, 0x00, 0xE8, 0x3E, 0x82, 0xD3, 0x04, 0x3E, 0x00, 0xD3, 0x05,
        0x3E, 0xAA, 0xD3, 0x07, 0x13, 0x13, 0x13, 0x13, 0x3E, 0x55, 0xD3, 0x07, 0x13, 0x13, 0x13, 0x13,
        0x3E, 0x00, 0xD3, 0x07, 0x3E, 0x10, 0xD3, 0x05, 0x13, 0x13, 0x13, 0x13, 0x3E, 0x00, 0xD3, 0x05,
        0x13, 0x13, 0x13, 0x13, 0x3E, 0x00, 0xD3, 0x07, 0x3E, 0x10, 0xD3, 0x05, 0x13, 0x13, 0x13, 0x13,
        0x3E, 0x00, 0xD3, 0x05, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x21, 0x00,
        0x00, 0x3E, 0x10, 0xD3, 0x05, 0x13, 0x13, 0x13, 0x13, 0x3E, 0x00, 0xD3, 0x05, 0x13, 0x13, 0x13,
        0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0xDB, 0x06, 0x77, 0x23,
        0x7C, 0xFE, 0x80, 0xC2, 0x4C, 0xE0, 0x3E, 0x81, 0xD3, 0x07, 0x13, 0x13, 0x13, 0x13, 0x13, 0x3E,
        0x10, 0xD3, 0x05, 0x13, 0x13, 0x13, 0x13, 0x13, 0x3E, 0x00, 0xD3, 0x05, 0x13, 0x13, 0x13, 0x13,
        0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x3E, 0x66, 0xD3, 0x07, 0x3E,
        0x10, 0xD3, 0x05, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x3E, 0x00,
        0xD3, 0x05, 0xC3, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0xAA
};
